datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl"]
}

model User {
  id           String        @id @default(uuid(7)) @db.Uuid
  email        String        @unique
  firstName    String?       @map("first_name")
  lastName     String?       @map("last_name")
  phoneNumber  String?       @map("phone_number")
  password     String
  createdAt    DateTime      @default(now()) @map("created_at")
  updatedAt    DateTime      @updatedAt @map("updated_at")
  reservations Reservation[]

  @@map("users")
}

model Reservation {
  id            String               @id @default(uuid(7)) @db.Uuid
  reservationId String               @unique @map("reservation_id")
  customerId    String               @map("user_id") @db.Uuid
  customer      User                 @relation(fields: [customerId], references: [id])
  startDate     DateTime             @map("start_date")
  endDate       DateTime             @map("end_date")
  status        String               @default("pending")
  qrCode        String?              @map("qr_code")
  paymentId     String?              @map("payment_id") @db.Uuid
  createdAt     DateTime             @default(now()) @map("created_at")
  updatedAt     DateTime             @updatedAt @map("updated_at")
  payment       Payment?             @relation(fields: [paymentId], references: [id])
  vehicles      ReservationVehicle[]

  @@map("reservations")
}

model Vehicle {
  id          String               @id @default(uuid(7)) @db.Uuid
  plateNumber String               @unique @map("plate_number")
  meta        Json                 @map("meta")
  createdAt   DateTime             @default(now()) @map("created_at")
  updatedAt   DateTime             @updatedAt @map("updated_at")
  reservation ReservationVehicle[]

  @@map("vehicles")
}

model ReservationVehicle {
  id            String      @id @default(uuid(7)) @db.Uuid
  vehicleId     String      @map("vehicle_id") @db.Uuid
  reservationId String      @map("reservation_id") @db.Uuid
  createdAt     DateTime    @default(now()) @map("created_at")
  updatedAt     DateTime    @updatedAt @map("updated_at")
  vehicle       Vehicle     @relation(fields: [vehicleId], references: [id])
  reservation   Reservation @relation(fields: [reservationId], references: [id])

  @@map("reservation_vehicle")
}

model Payment {
  id            String        @id @default(uuid(7)) @db.Uuid
  reservationId String        @map("reservation_id") @db.Uuid
  amount        Float
  currency      String
  status        String        @default("pending")
  createdAt     DateTime      @default(now()) @map("created_at")
  updatedAt     DateTime      @updatedAt @map("updated_at")
  reservation   Reservation[]

  @@map("payments")
}
